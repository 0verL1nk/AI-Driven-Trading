# AI Trading System Configuration

# Exchange Settings
exchange:
  name: "binance"
  testnet: true  # Use testnet for paper trading
  api_key: ""  # Set via environment variable
  api_secret: ""  # Set via environment variable
  
# Trading Pairs
trading_pairs:
  - BTC/USDT:USDT
  - ETH/USDT:USDT
  - SOL/USDT:USDT
  - BNB/USDT:USDT
  - XRP/USDT:USDT
  - DOGE/USDT:USDT

# Timeframes for data collection
timeframes:
  intraday: "3m"  # Main decision timeframe
  short: "1m"
  medium: "15m"
  long: "4h"

# AI Decision Engine
ai:
  provider: "openai"  # openai, anthropic, local
  model: "deepseek-ai/deepseek-v3.1-terminus"
  is_reasoning_model: true  # 是否为推理模型(如DeepSeek-R1, o1等)
                            # true: 模型自带推理能力,一步输出思考+JSON
                            # false: 普通模型,需要两步调用(第一步思考,第二步输出JSON)
  base_url: ""  # 留空使用官方API，或填入第三方OpenAI兼容API地址
                # 示例：https://api.oneapi.com/v1 (国内中转)
                # 示例：http://localhost:8000/v1 (本地vLLM)
                # 注：也可通过环境变量OPENAI_BASE_URL配置
  temperature: 0.3  # 降低随机性，让AI更保守和一致
  max_tokens: 9000
  decision_interval_minutes: 1 
  enable_chain_of_thought: true
  multi_agent_validation: false  # Enable for critical decisions
  
  # Optional LLM parameters (根据模型需要配置)
  stream: true  # 流式输出（推荐，用于提取reasoning_content）
  # thinking_budget: 1024  # DeepSeek-R1专用：推理预算（注释掉=不限制，或设置更大值如32768）
  # response_format: {"type": "json_object"}  # 强制JSON输出（某些模型需要）
  # 推理模型专用参数（DeepSeek等）
  extra_body: 
    chat_template_kwargs: 
      thinking: true  # 启用推理模式

# Paper Trading Settings
paper_trading:
  enabled: true
  initial_balance: 10000.0  # USDT
  slippage_percent: 0.1
  commission_percent: 0.04  # 0.04% maker/taker

# Database
database:
  host: "localhost"
  port: 5432
  name: "trading_db"
  user: "trading_user"
  password: ""  # Set via environment variable

# Redis
redis:
  host: "localhost"
  port: 6379
  db: 0

# Monitoring
monitoring:
  telegram_bot_token: ""  # Set via environment variable
  telegram_chat_id: ""  # Set via environment variable
  enable_alerts: true
  
# Logging
logging:
  level: "INFO"
  format: "json"
  file: "logs/trading.log"

